<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty plugin="heavy-job@1.1">
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>dockercloud_ubuntu18.04</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H 13 * * 1</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># Install dependencies
export WORK_DIR=`pwd`
sudo apt-get -y update 
sudo apt-get install -y wget tar openjdk-8-jdk ant curl

# Download Apache Solr 7.3.1 source code
wget http://archive.apache.org/dist/lucene/solr/7.3.1/solr-7.3.1-src.tgz
tar zxvf solr-7.3.1-src.tgz

#  Set Environment Variables
export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-s390x
export PATH=$JAVA_HOME/bin:$PATH
java -version
export ANT_OPTS=&quot;-Xmx1024m -Xss1g&quot;

# Configure and make
ant -version
cd $WORK_DIR/solr-7.3.1/solr
ant ivy-bootstrap
ant compile
ant server

#verification step
cd $WORK_DIR/solr-7.3.1/solr/bin
sudo chmod a+x solr
ls -l


./solr start
echo &quot;Started&quot;

./solr create -c samp2 | tee solr_output.txt
cat solr_output.txt

curl http://localhost:8983/solr/

#verification of output 
string=&quot;Created new core &apos;samp2&apos;&quot;;
if grep -i &quot;$string&quot;  solr_output.txt; then
   ./solr stop
else
  exit 1
fi

./solr version | grep 7.3.1</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder plugin="groovy-postbuild@2.3.1">
      <script plugin="script-security@1.24">
        <script>import jenkins.model.Jenkins

def x=manager.envVars[&apos;NODE_NAME&apos;]
Jenkins.instance.slaves.each {
    if(it.name==x){
it.getComputer().doDoDelete()
    }
}
</script>
        <sandbox>false</sandbox>
      </script>
      <behavior>0</behavior>
      <runForMatrixParent>false</runForMatrixParent>
    </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>
    <jenkins.plugins.slack.SlackNotifier plugin="slack@2.2">
      <baseUrl></baseUrl>
      <teamDomain></teamDomain>
      <authToken></authToken>
      <authTokenCredentialId></authTokenCredentialId>
      <botUser>false</botUser>
      <room>#loz-jenkins-build,@vitthalb</room>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyRegression>false</notifyRegression>
      <notifyFailure>true</notifyFailure>
      <notifyBackToNormal>true</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <includeFailedTests>false</includeFailedTests>
      <commitInfoChoice>NONE</commitInfoChoice>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier>
  </publishers>
  <buildWrappers/>
</project>