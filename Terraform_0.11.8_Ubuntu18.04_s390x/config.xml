<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty plugin="heavy-job@1.1">
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>dockercloud_ubuntu18.04</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H 13 * * 1</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>cat /etc/os*


export GOPATH=`pwd`
cd $GOPATH

#Install Terraform
sudo apt-get update
sudo apt-get install -y git wget make zip golang-1.10
export PATH=/usr/lib/go-1.10/bin:$PATH
go version

export PATH=$GOPATH/bin:$PATH
mkdir -p $GOPATH/src/github.com/hashicorp
cd $GOPATH/src/github.com/hashicorp
git clone https://github.com/hashicorp/terraform.git
cd terraform/
git checkout v0.11.8
make tools

# While building Terraform, test also runs &amp; Some of the tests are intermittent failures 
make 2&gt;&amp;1 | tee -a build_logs
cat build_logs | grep &quot;FAIL&quot; | grep github.com | awk &apos;{print $2}&apos; &gt;&gt; test.txt

COUNTER=1
echo &quot;after assignment&quot;
echo $COUNTER
#while [[ (IFS=&apos;&apos; read -r line || (( -n &quot;$line&quot; ))) &amp;&amp; ( $COUNTER &lt; 5 )]]
while IFS=&apos;&apos; read -r line || [[ -n &quot;$line&quot; ]]; do
echo &quot;11 condition&quot;
echo $COUNTER
echo &quot;222 condition&quot;
if [ $COUNTER -lt 6 ]
then 
    echo &quot;inside if condition&quot;
    echo $COUNTER
    go test -v $line
    COUNTER=$((COUNTER + 1))
fi
echo &quot;outside if condition&quot;
echo $COUNTER
done &lt; test.txt

#Build terraform

XC_OS=linux XC_ARCH=s390x make bin

file pkg/linux_s390x/terraform | grep &quot;IBM S/390&quot;


#Verification
terraform --version | grep 0.11.8
echo &quot;1 + 5&quot; | terraform console

</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder plugin="groovy-postbuild@2.3.1">
      <script plugin="script-security@1.24">
        <script>import jenkins.model.Jenkins

def x=manager.envVars[&apos;NODE_NAME&apos;]
Jenkins.instance.slaves.each {
    if(it.name==x){
it.getComputer().doDoDelete()
    }
}
</script>
        <sandbox>false</sandbox>
      </script>
      <behavior>0</behavior>
      <runForMatrixParent>false</runForMatrixParent>
    </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>
    <jenkins.plugins.slack.SlackNotifier plugin="slack@2.2">
      <baseUrl></baseUrl>
      <teamDomain></teamDomain>
      <authToken></authToken>
      <authTokenCredentialId></authTokenCredentialId>
      <botUser>false</botUser>
      <room>#loz-jenkins-build,@vitthalb</room>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyRegression>false</notifyRegression>
      <notifyFailure>true</notifyFailure>
      <notifyBackToNormal>true</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <includeFailedTests>false</includeFailedTests>
      <commitInfoChoice>NONE</commitInfoChoice>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier>
  </publishers>
  <buildWrappers/>
</project>