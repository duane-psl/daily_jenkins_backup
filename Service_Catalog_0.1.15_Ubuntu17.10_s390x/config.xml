<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty plugin="heavy-job@1.1">
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>dockercloud_ubuntu17.10_8192</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H 15 * * 4</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#Docker installation
sudo apt-get update
cat /etc/os*
sudo apt-get install -y apt-transport-https  ca-certificates  curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository &quot;deb [arch=s390x] https://download.docker.com/linux/ubuntu  $(lsb_release -cs) stable&quot;
sudo apt-get update
sudo apt-get install -y docker-ce

sudo service docker start
sleep 20s
sudo service docker status

#Service catalog
sudo apt-get update
sudo apt-get install -y git make 
export GOPATH=`pwd`
mkdir -p $GOPATH/src/github.com/kubernetes-incubator
cd $GOPATH/src/github.com/kubernetes-incubator
git clone https://github.com/kubernetes-incubator/service-catalog.git
cd service-catalog
git checkout v0.1.15

sed -i &apos;15 s/golang/s390x\/golang/&apos; $GOPATH/src/github.com/kubernetes-incubator/service-catalog/build/build-image/Dockerfile
sed -i &apos;/ENV DEP_VERSION/d&apos; $GOPATH/src/github.com/kubernetes-incubator/service-catalog/build/build-image/Dockerfile
sed -i &apos;/$\DEP_VERSION/d&apos; $GOPATH/src/github.com/kubernetes-incubator/service-catalog/build/build-image/Dockerfile
sed -i &apos;18d&apos; $GOPATH/src/github.com/kubernetes-incubator/service-catalog/build/build-image/Dockerfile
sed -i &apos;18i \	\RUN go get -u -v github.com/golang/dep/cmd/dep &amp;&amp; \\&apos; $GOPATH/src/github.com/kubernetes-incubator/service-catalog/build/build-image/Dockerfile
sed -i &apos;19i 	\	\ln -s /go/bin/dep /usr/local/bin/dep&apos; $GOPATH/src/github.com/kubernetes-incubator/service-catalog/build/build-image/Dockerfile
sed -i &apos;/etcd-v3.1.10/d&apos; $GOPATH/src/github.com/kubernetes-incubator/service-catalog/build/build-image/Dockerfile
sed -i &apos;22i \	\ENV ETCD_DATA_DIR=/data ETCD_UNSUPPORTED_ARCH=s390x&apos; $GOPATH/src/github.com/kubernetes-incubator/service-catalog/build/build-image/Dockerfile
sed -i &apos;23i \	\RUN mkdir -p /src/github.com/coreos \\&apos; $GOPATH/src/github.com/kubernetes-incubator/service-catalog/build/build-image/Dockerfile
sed -i &apos;24i \	\&amp;&amp; cd /src/github.com/coreos \\&apos; $GOPATH/src/github.com/kubernetes-incubator/service-catalog/build/build-image/Dockerfile
sed -i &apos;25i \	\&amp;&amp; rm -rf etcd \\&apos; $GOPATH/src/github.com/kubernetes-incubator/service-catalog/build/build-image/Dockerfile
sed -i &apos;26i \	\&amp;&amp; git clone https://github.com/coreos/etcd \\&apos; $GOPATH/src/github.com/kubernetes-incubator/service-catalog/build/build-image/Dockerfile
sed -i &apos;27i \	\&amp;&amp; cd etcd \\&apos; $GOPATH/src/github.com/kubernetes-incubator/service-catalog/build/build-image/Dockerfile
sed -i &apos;28i \	\&amp;&amp; git checkout v3.2.7 \\&apos; $GOPATH/src/github.com/kubernetes-incubator/service-catalog/build/build-image/Dockerfile
sed -i &apos;29i \	\&amp;&amp; mkdir -p /data \\&apos; $GOPATH/src/github.com/kubernetes-incubator/service-catalog/build/build-image/Dockerfile
sed -i &apos;30i \	\&amp;&amp; ./build \\&apos; $GOPATH/src/github.com/kubernetes-incubator/service-catalog/build/build-image/Dockerfile
sed -i &apos;31i \	\&amp;&amp; cd bin &amp;&amp; cp -rf etcd etcdctl /usr/bin/&apos; $GOPATH/src/github.com/kubernetes-incubator/service-catalog/build/build-image/Dockerfile
sed -i &apos;42d&apos; $GOPATH/src/github.com/kubernetes-incubator/service-catalog/build/build-image/Dockerfile
sed -i &apos;42i \	\RUN apt-get update &amp;&amp; apt-get install -y python-pip libpq-dev python-dev libxml2-dev libxslt1-dev libldap2-dev libsasl2-dev libffi-dev libssl-dev &amp;&amp; \\&apos; $GOPATH/src/github.com/kubernetes-incubator/service-catalog/build/build-image/Dockerfile

git diff
cd $GOPATH/src/github.com/kubernetes-incubator/service-catalog
sudo -E make build ARCH=s390x 
export PATH=$GOPATH/src/github.com/kubernetes-incubator/service-catalog/bin:$PATH

sudo -E make svcat ARCH=s390x

sed -i &apos;261 s/-race//&apos; $GOPATH/src/github.com/kubernetes-incubator/service-catalog/Makefile
git diff

cd $GOPATH/src/github.com/kubernetes-incubator/service-catalog
sudo -E make test-unit ARCH=s390x

#Note : Added sudo -E because docker is installed with sudo and need to add test user to docker group.
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <jenkins.plugins.slack.SlackNotifier plugin="slack@2.2">
      <baseUrl></baseUrl>
      <teamDomain></teamDomain>
      <authToken></authToken>
      <authTokenCredentialId></authTokenCredentialId>
      <botUser>false</botUser>
      <room>@vibhuti.sawant</room>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyRegression>false</notifyRegression>
      <notifyFailure>true</notifyFailure>
      <notifyBackToNormal>true</notifyBackToNormal>
      <notifyRepeatedFailure>true</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <includeFailedTests>false</includeFailedTests>
      <commitInfoChoice>NONE</commitInfoChoice>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier>
  </publishers>
  <buildWrappers/>
</project>