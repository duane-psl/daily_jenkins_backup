<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty plugin="heavy-job@1.1">
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>dockercloud_ubuntu17.10_8192</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H 23 * * 6</spec>
    </hudson.triggers.TimerTrigger>
    <hudson.triggers.SCMTrigger>
      <spec>H 23 * * 6</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>
export WS=`pwd`

###Install dependencies

sudo apt-get update -y 
sudo apt-get install -y git wget
sudo apt-get install -y protobuf-compiler

        export PATH=$PATH:/usr/bin
        protoc --version

###Set env variables
sudo apt-get install -y openjdk-8-jdk

#Set java home and path otherwise it uses openjdk9

export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-s390x
export PATH=$JAVA_HOME/bin:$PATH
java -version

export LANG=&quot;en_US.UTF-8&quot;
export JAVA_TOOL_OPTIONS=&quot;-Dfile.encoding=UTF8&quot;
export _JAVA_OPTIONS=-Xmx2048m
export JVM_ARGS=&quot;-Xms2048m -Xmx2048m&quot;

java -version


###Get geode source
cd $WS
rm -rf incubator-geode
rm -rf /home/test/.gradle
git clone https://github.com/apache/incubator-geode.git
cd incubator-geode/
git checkout rel/v1.4.0


mkdir -p /home/test/.gradle/caches/modules-2/files-2.1/com.google.protobuf/protoc/3.0.0

cp /usr/bin/protoc /home/test/.gradle/caches/modules-2/files-2.1/com.google.protobuf/protoc/3.0.0/protoc-3.0.0-linux-s390x_64.exe

sudo -E sed -i &apos;37d&apos; $WS/incubator-geode/geode-protobuf-messages/build.gradle 

sudo -E sed -i &quot;44iorg.gradle.jvmargs = -Xss1g&quot; $WS/incubator-geode/gradle.properties

cd $WS/incubator-geode
git diff 

###Build
./gradlew build installDist -x test | tee build.log

###Test

./gradlew test 2&gt;&amp;1 | tee $WS/testlog


echo &quot;org.apache.geode.internal.process.NativeProcessUtilsTest &gt; isProcessAlive_livePid_returnsTrue FAILED
org.apache.geode.internal.process.NativeProcessUtilsTest &gt; isProcessAlive_deadPid_returnsFalse FAILED
org.apache.geode.internal.size.SizeClassOnceObjectSizerJUnitTest &gt; test FAILED
org.apache.geode.internal.size.WellKnownClassSizerJUnitTest &gt; testStrings FAILED
:geode-core:test FAILED
BUILD FAILED&quot; &gt;$WS/exp_failures

cat $WS/testlog | grep FAILED &gt;$WS/s390x_failures
cat $WS/s390x_failures

###Fail the job if any extra failure occurred apart from expected failures
if diff -u --ignore-all-space &lt;(sort $WS/s390x_failures) &lt;(sort $WS/exp_failures) | grep -q -i &quot;\-org&quot;; then
	echo &quot;Unexpected failures found!&quot;
    exit 1
fi
export PATH=$PATH:$WS/incubator-geode/geode-assembly/build/install/apache-geode/bin
gfsh </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder plugin="groovy-postbuild@2.3.1">
      <script plugin="script-security@1.24">
        <script>import jenkins.model.Jenkins

def x=manager.envVars[&apos;NODE_NAME&apos;]
Jenkins.instance.slaves.each {
    if(it.name==x){
it.getComputer().doDoDelete()
    }
}</script>
        <sandbox>false</sandbox>
      </script>
      <behavior>0</behavior>
      <runForMatrixParent>false</runForMatrixParent>
    </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>
    <jenkins.plugins.slack.SlackNotifier plugin="slack@2.2">
      <baseUrl></baseUrl>
      <teamDomain></teamDomain>
      <authToken></authToken>
      <authTokenCredentialId></authTokenCredentialId>
      <botUser>false</botUser>
      <room>#loz-jenkins-build,@srajmane</room>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyRegression>false</notifyRegression>
      <notifyFailure>true</notifyFailure>
      <notifyBackToNormal>true</notifyBackToNormal>
      <notifyRepeatedFailure>true</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <includeFailedTests>false</includeFailedTests>
      <commitInfoChoice>NONE</commitInfoChoice>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier>
  </publishers>
  <buildWrappers/>
</project>